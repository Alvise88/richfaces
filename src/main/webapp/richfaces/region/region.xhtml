<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://java.sun.com/jsf/composite/rich"
	xmlns:at="http://richfaces.org/demo/app-taglib">

<ui:composition> 
	<p><b>a4j:region</b> component designed for marking zones which
	should be processed during Ajax requests without using execute
	definitions at Ajax behaviors/components. This allow to decouple the
	processing definitions from components id's and use declarative
	wrapping by this tag instead.</p>
	<p>In <b>RichFaces 3.3</b> all the view was processed if no regions
	specified as <b>ViewRoot itself was region by default</b>. And in <b>RichFaces
	4.x</b> - all the controls has <b>execute="@this" by default</b> according
	to JSF 2 specifications. But if the <b>controls wrapped with
	a4j:region</b> component and has no execute definitions - them uses<b>
	execute="@region"</b></p>
	<p>Look to the simple example below. There are two similar user
	info panels. But the ajax behaviors inside the first panel uses execute
	declarations and pointed to panelGrid id. And the second panel inputs
	just wrapped to region without any additional execute definitions.</p>
	<ui:include src="#{demoNavigator.sampleIncludeURI}" />
	<at:syntaxHighlighter src="#{demoNavigator.sampleIncludeURI}" />
</ui:composition>
</html>